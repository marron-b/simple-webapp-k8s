# 모든 리소스를 하나의 파일에 모은 테스트용 매니페스트
# 파일명: all-in-one.yaml
---
apiVersion: v1
kind: Namespace
metadata:
  name: simple-webapp
  labels:
    app: simple-webapp
    environment: test
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-html
  namespace: simple-webapp
  labels:
    app: simple-webapp
    component: backend
data:
  index.html: |
    <!DOCTYPE html>
    <html>
    <head>
        <title>Backend API</title>
        <style>
            body { font-family: Arial; background: #2c3e50; color: white; padding: 20px; text-align: center; }
        </style>
    </head>
    <body>
        <h1>🚀 Backend API Server</h1>
        <p>Simple REST API for testing</p>
        <p>Status: ✅ Running</p>
        <p>Component: Backend | Tier: API</p>
    </body>
    </html>
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: simple-webapp
  labels:
    app: simple-webapp
    component: backend
    tier: api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: simple-webapp
      component: backend
  template:
    metadata:
      labels:
        app: simple-webapp
        component: backend
        tier: api
    spec:
      containers:
      - name: backend
        image: httpd:2.4
        ports:
        - containerPort: 80
        env:
        - name: SERVER_TYPE
          value: "backend"
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        volumeMounts:
        - name: backend-config
          mountPath: /usr/local/apache2/htdocs/
      volumes:
      - name: backend-config
        configMap:
          name: backend-html
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: simple-webapp
  labels:
    app: simple-webapp
    component: backend
    tier: api
spec:
  selector:
    app: simple-webapp
    component: backend
  ports:
  - name: http
    port: 8080
    targetPort: 80
    protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-html
  namespace: simple-webapp
  labels:
    app: simple-webapp
    component: frontend
data:
  index.html: |
    <!DOCTYPE html>
    <html>
    <head>
        <title>Simple Web App</title>
        <style>
            body { 
                font-family: Arial, sans-serif; 
                margin: 0; 
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                min-height: 100vh;
                display: flex;
                align-items: center;
                justify-content: center;
                color: white;
            }
            .container { 
                background: rgba(255,255,255,0.1); 
                padding: 40px; 
                border-radius: 20px; 
                text-align: center;
                backdrop-filter: blur(10px);
            }
        </style>
    </head>
    <body>
        <div class="container">
            <h1>🌐 Simple Web Application</h1>
            <p>Frontend + Backend Architecture Test</p>
            <div style="margin: 20px 0; padding: 20px; background: rgba(255,255,255,0.2); border-radius: 10px;">
                <h3>✅ Frontend Status: Running</h3>
                <p>Component: Frontend | Tier: Web</p>
                <p>Backend Service: backend-service:8080</p>
            </div>
            <p>🚢 Deployed via Argo CD | 🐳 Running on Kubernetes</p>
        </div>
    </body>
    </html>
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: simple-webapp
  labels:
    app: simple-webapp
    component: frontend
    tier: web
spec:
  replicas: 3
  selector:
    matchLabels:
      app: simple-webapp
      component: frontend
  template:
    metadata:
      labels:
        app: simple-webapp
        component: frontend
        tier: web
    spec:
      containers:
      - name: frontend
        image: nginx:1.21
        ports:
        - containerPort: 80
        env:
        - name: BACKEND_URL
          value: "http://backend-service:8080"
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        volumeMounts:
        - name: frontend-config
          mountPath: /usr/share/nginx/html/
      volumes:
      - name: frontend-config
        configMap:
          name: frontend-html
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: simple-webapp
  labels:
    app: simple-webapp
    component: frontend
    tier: web
spec:
  selector:
    app: simple-webapp
    component: frontend
  ports:
  - name: http
    port: 80
    targetPort: 80
    protocol: TCP
  type: NodePort
  sessionAffinity: None
